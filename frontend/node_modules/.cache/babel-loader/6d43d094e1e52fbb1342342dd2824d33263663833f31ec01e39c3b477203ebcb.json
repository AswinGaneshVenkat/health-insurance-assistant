{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenAi Project\\\\frontend\\\\src\\\\insurance_bot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './insurance_bot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsuranceBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"👋 Welcome! How can I assist you with insurance or healthcare plans today?\",\n    sender: \"bot\"\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const lastInteractionWasVoice = useRef(false);\n  useEffect(() => {\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.lang = 'en-US';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setInputMessage(transcript);\n        handleSend(transcript, true); // true means it came from voice\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n  }, []);\n  const handleMicClick = () => {\n    if (isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  const handleSend = async (optionalMessage = null, fromVoice = false) => {\n    const messageToSend = optionalMessage || inputMessage.trim();\n    if (!messageToSend) return;\n    const userMessage = {\n      text: messageToSend,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    lastInteractionWasVoice.current = fromVoice; // Track voice or text input\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        text: data.response,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n      if (fromVoice) {\n        speakText(data.response); // Only if mic was used\n      }\n    } catch (error) {\n      const errorMessage = {\n        text: \"⚠️ Error! Please try again later.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  const speakText = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = 'en-US';\n    window.speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDDE0 Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.filter(msg => msg.sender === 'user').map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [msg.text.slice(0, 20), \"...\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"bot\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), \" Health Insurance Assistant\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"chat-input\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          onKeyDown: e => e.key === 'Enter' && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: () => handleSend(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mic-button ${isListening ? 'listening' : ''}`,\n          onClick: handleMicClick,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(InsuranceBot, \"HPJsVZFt83TudEBSXOgGy/kcYUk=\");\n_c = InsuranceBot;\nexport default InsuranceBot;\nvar _c;\n$RefreshReg$(_c, \"InsuranceBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","InsuranceBot","_s","messages","setMessages","text","sender","inputMessage","setInputMessage","isListening","setIsListening","recognitionRef","lastInteractionWasVoice","window","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","transcript","results","handleSend","onend","current","handleMicClick","stop","start","optionalMessage","fromVoice","messageToSend","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","speakText","error","errorMessage","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","msg","map","idx","slice","role","type","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["D:/GenAi Project/frontend/src/insurance_bot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './insurance_bot.css';\r\n\r\nconst InsuranceBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"👋 Welcome! How can I assist you with insurance or healthcare plans today?\", sender: \"bot\" }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n  const lastInteractionWasVoice = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if ('webkitSpeechRecognition' in window) {\r\n      const recognition = new window.webkitSpeechRecognition();\r\n      recognition.lang = 'en-US';\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n\r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setInputMessage(transcript);\r\n        handleSend(transcript, true);  // true means it came from voice\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n  }, []);\r\n\r\n  const handleMicClick = () => {\r\n    if (isListening) {\r\n      recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognitionRef.current.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  const handleSend = async (optionalMessage = null, fromVoice = false) => {\r\n    const messageToSend = optionalMessage || inputMessage.trim();\r\n    if (!messageToSend) return;\r\n\r\n    const userMessage = { text: messageToSend, sender: 'user' };\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n    lastInteractionWasVoice.current = fromVoice; // Track voice or text input\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: messageToSend })\r\n      });\r\n      const data = await response.json();\r\n      const botMessage = { text: data.response, sender: 'bot' };\r\n      setMessages(prev => [...prev, botMessage]);\r\n\r\n      if (fromVoice) {\r\n        speakText(data.response); // Only if mic was used\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = { text: \"⚠️ Error! Please try again later.\", sender: \"bot\" };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    }\r\n  };\r\n\r\n  const speakText = (text) => {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.lang = 'en-US';\r\n    window.speechSynthesis.speak(utterance);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-layout\">\r\n      {/* Sidebar */}\r\n      <div className=\"sidebar\">\r\n        <h2>🧠 Memory</h2>\r\n        <ul>\r\n          {messages\r\n            .filter(msg => msg.sender === 'user')\r\n            .map((msg, idx) => (\r\n              <li key={idx}>{msg.text.slice(0, 20)}...</li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-title\">\r\n          <span role=\"img\" aria-label=\"bot\">🤖</span> Health Insurance Assistant\r\n        </div>\r\n        <div className=\"chat-box\">\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx} className={`chat-message ${msg.sender}`}>\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"input-section\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"chat-input\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            onKeyDown={(e) => e.key === 'Enter' && handleSend()}\r\n          />\r\n          <button className=\"send-button\" onClick={() => handleSend()}>Send</button>\r\n          <button\r\n            className={`mic-button ${isListening ? 'listening' : ''}`}\r\n            onClick={handleMicClick}\r\n          >\r\n            🎤\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsuranceBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}