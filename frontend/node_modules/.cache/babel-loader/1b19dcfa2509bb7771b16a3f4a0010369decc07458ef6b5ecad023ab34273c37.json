{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenAi Project\\\\frontend\\\\src\\\\insurance_bot.jsx\",\n  _s = $RefreshSig$();\n// src/insurance_bot.jsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport 'insurance_bot.css';\nimport { FaMicrophone, FaMicrophoneSlash } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InsuranceBot() {\n  _s();\n  const [messages, setMessages] = useState([{\n    type: 'bot',\n    text: \"👋 Welcome! How can I assist you with insurance or healthcare plans in the United States 🇺🇸 today?\"\n  }]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [memory, setMemory] = useState([]);\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (!('webkitSpeechRecognition' in window)) {\n      alert(\"Your browser does not support speech recognition.\");\n      return;\n    }\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setInputMessage(transcript);\n    };\n    recognitionRef.current = recognition;\n  }, []);\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const toggleListening = () => {\n    if (listening) {\n      recognitionRef.current.stop();\n      setListening(false);\n    } else {\n      recognitionRef.current.start();\n      setListening(true);\n    }\n  };\n  const sendMessage = async () => {\n    if (inputMessage.trim() === '') return;\n    const userMessage = inputMessage;\n    setMessages(prev => [...prev, {\n      type: 'user',\n      text: userMessage\n    }]);\n    setMemory(prev => [...prev, userMessage]);\n    setInputMessage('');\n    try {\n      const response = await fetch('http://127.0.0.1:8000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage\n        })\n      });\n      const data = await response.json();\n      const botMessage = data.response;\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: botMessage\n      }]);\n    } catch (error) {\n      console.error(\"Error:\", error);\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: \"⚠️ Sorry, an error occurred.\"\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83E\\uDDE0 Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), memory.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-item\",\n        children: item\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83E\\uDD16 Health Insurance Assistant (United States) \\uD83C\\uDDFA\\uD83C\\uDDF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: msg.text\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your message...\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"send-button\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleListening,\n          className: `mic-button ${listening ? 'listening' : ''}`,\n          children: listening ? /*#__PURE__*/_jsxDEV(FaMicrophoneSlash, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(InsuranceBot, \"yK0nsQatJ/q3I7ifJSuKbDP/PfQ=\");\n_c = InsuranceBot;\nexport default InsuranceBot;\nvar _c;\n$RefreshReg$(_c, \"InsuranceBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","FaMicrophone","FaMicrophoneSlash","jsxDEV","_jsxDEV","InsuranceBot","_s","messages","setMessages","type","text","inputMessage","setInputMessage","memory","setMemory","listening","setListening","recognitionRef","messagesEndRef","window","alert","recognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onresult","event","transcript","results","current","_messagesEndRef$curre","scrollIntoView","behavior","toggleListening","stop","start","sendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","error","console","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","idx","msg","dangerouslySetInnerHTML","__html","ref","placeholder","value","onChange","target","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["D:/GenAi Project/frontend/src/insurance_bot.jsx"],"sourcesContent":["// src/insurance_bot.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport 'insurance_bot.css';\r\nimport { FaMicrophone, FaMicrophoneSlash } from 'react-icons/fa';\r\n\r\nfunction InsuranceBot() {\r\n  const [messages, setMessages] = useState([\r\n    { type: 'bot', text: \"👋 Welcome! How can I assist you with insurance or healthcare plans in the United States 🇺🇸 today?\" }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [memory, setMemory] = useState([]);\r\n  const [listening, setListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (!('webkitSpeechRecognition' in window)) {\r\n      alert(\"Your browser does not support speech recognition.\");\r\n      return;\r\n    }\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.lang = 'en-US';\r\n    recognition.interimResults = false;\r\n    recognition.maxAlternatives = 1;\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setInputMessage(transcript);\r\n    };\r\n    recognitionRef.current = recognition;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const toggleListening = () => {\r\n    if (listening) {\r\n      recognitionRef.current.stop();\r\n      setListening(false);\r\n    } else {\r\n      recognitionRef.current.start();\r\n      setListening(true);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (inputMessage.trim() === '') return;\r\n\r\n    const userMessage = inputMessage;\r\n    setMessages(prev => [...prev, { type: 'user', text: userMessage }]);\r\n    setMemory(prev => [...prev, userMessage]);\r\n    setInputMessage('');\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: userMessage })\r\n      });\r\n      const data = await response.json();\r\n      const botMessage = data.response;\r\n\r\n      setMessages(prev => [...prev, { type: 'bot', text: botMessage }]);\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      setMessages(prev => [...prev, { type: 'bot', text: \"⚠️ Sorry, an error occurred.\" }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <div className=\"memory-sidebar\">\r\n        <h2>🧠 Memory</h2>\r\n        {memory.map((item, idx) => (\r\n          <div key={idx} className=\"memory-item\">{item}</div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">🤖 Health Insurance Assistant (United States) 🇺🇸</div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx} className={`message ${msg.type}`}>\r\n              <div dangerouslySetInnerHTML={{ __html: msg.text }} />\r\n            </div>\r\n          ))}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type your message...\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n          />\r\n          <button onClick={sendMessage} className=\"send-button\">Send</button>\r\n          <button onClick={toggleListening} className={`mic-button ${listening ? 'listening' : ''}`}>\r\n            {listening ? <FaMicrophoneSlash /> : <FaMicrophone />}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InsuranceBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}