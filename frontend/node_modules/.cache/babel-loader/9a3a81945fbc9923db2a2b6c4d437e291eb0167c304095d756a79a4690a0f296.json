{"ast":null,"code":"var _jsxFileName = \"D:\\\\GenAi Project\\\\frontend\\\\src\\\\insurance_bot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./insurance_bot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsuranceBot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"👋 Welcome! How can I assist you with health insurance or healthcare plans in the USA today?\",\n    sender: \"bot\"\n  }]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [listening, setListening] = useState(false);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    if (\"webkitSpeechRecognition\" in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.lang = \"en-US\";\n      recognition.interimResults = false;\n      recognition.maxAlternatives = 1;\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        handleUserMessage(transcript, true);\n      };\n      recognition.onerror = event => {\n        console.error(\"Speech Recognition Error\", event.error);\n        setListening(false);\n      };\n      recognition.onend = () => {\n        setListening(false);\n      };\n      recognitionRef.current = recognition;\n    }\n  }, []);\n  const handleUserMessage = async (message, isVoice = false) => {\n    if (!message.trim()) return;\n    setMessages(prev => [...prev, {\n      text: message,\n      sender: \"user\"\n    }]);\n    setInputMessage(\"\");\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      const botResponse = data.response;\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n      if (isVoice && window.speechSynthesis) {\n        const utterance = new SpeechSynthesisUtterance(botResponse);\n        window.speechSynthesis.speak(utterance);\n      }\n    } catch (error) {\n      console.error(\"Error fetching response:\", error);\n      setMessages(prev => [...prev, {\n        text: \"⚠️ Sorry, something went wrong.\",\n        sender: \"bot\"\n      }]);\n    }\n  };\n  const handleSendClick = () => {\n    if (inputMessage.trim()) {\n      handleUserMessage(inputMessage);\n    }\n  };\n  const handleMicClick = () => {\n    if (!recognitionRef.current) return;\n    if (listening) {\n      recognitionRef.current.stop();\n      setListening(false);\n    } else {\n      recognitionRef.current.start();\n      setListening(true);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleSendClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"\\uD83E\\uDD16 Health Insurance Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.sender}`,\n          dangerouslySetInnerHTML: {\n            __html: msg.text.replace(/\\n/g, \"<br/>\")\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputMessage,\n          onChange: e => setInputMessage(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSendClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mic-button ${listening ? \"listening\" : \"\"}`,\n          onClick: handleMicClick,\n          children: \"\\uD83C\\uDFA4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(InsuranceBot, \"az5Axjb01NUKWNxAeYGmdBU6Tv0=\");\n_c = InsuranceBot;\nexport default InsuranceBot;\nvar _c;\n$RefreshReg$(_c, \"InsuranceBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","InsuranceBot","_s","messages","setMessages","text","sender","inputMessage","setInputMessage","listening","setListening","recognitionRef","window","recognition","webkitSpeechRecognition","continuous","lang","interimResults","maxAlternatives","onresult","event","transcript","results","handleUserMessage","onerror","console","error","onend","current","message","isVoice","trim","prev","response","fetch","method","headers","body","JSON","stringify","data","json","botResponse","speechSynthesis","utterance","SpeechSynthesisUtterance","speak","handleSendClick","handleMicClick","stop","start","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","dangerouslySetInnerHTML","__html","replace","type","value","onChange","target","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/GenAi Project/frontend/src/insurance_bot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./insurance_bot.css\";\r\n\r\nconst InsuranceBot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"👋 Welcome! How can I assist you with health insurance or healthcare plans in the USA today?\", sender: \"bot\" }\r\n  ]);\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [listening, setListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (\"webkitSpeechRecognition\" in window) {\r\n      const recognition = new window.webkitSpeechRecognition();\r\n      recognition.continuous = false;\r\n      recognition.lang = \"en-US\";\r\n      recognition.interimResults = false;\r\n      recognition.maxAlternatives = 1;\r\n\r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        handleUserMessage(transcript, true);\r\n      };\r\n\r\n      recognition.onerror = (event) => {\r\n        console.error(\"Speech Recognition Error\", event.error);\r\n        setListening(false);\r\n      };\r\n\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      };\r\n\r\n      recognitionRef.current = recognition;\r\n    }\r\n  }, []);\r\n\r\n  const handleUserMessage = async (message, isVoice = false) => {\r\n    if (!message.trim()) return;\r\n\r\n    setMessages((prev) => [...prev, { text: message, sender: \"user\" }]);\r\n    setInputMessage(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botResponse = data.response;\r\n\r\n      setMessages((prev) => [...prev, { text: botResponse, sender: \"bot\" }]);\r\n\r\n      if (isVoice && window.speechSynthesis) {\r\n        const utterance = new SpeechSynthesisUtterance(botResponse);\r\n        window.speechSynthesis.speak(utterance);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error fetching response:\", error);\r\n      setMessages((prev) => [...prev, { text: \"⚠️ Sorry, something went wrong.\", sender: \"bot\" }]);\r\n    }\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    if (inputMessage.trim()) {\r\n      handleUserMessage(inputMessage);\r\n    }\r\n  };\r\n\r\n  const handleMicClick = () => {\r\n    if (!recognitionRef.current) return;\r\n    if (listening) {\r\n      recognitionRef.current.stop();\r\n      setListening(false);\r\n    } else {\r\n      recognitionRef.current.start();\r\n      setListening(true);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSendClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <div className=\"chat-container\">\r\n        <div className=\"chat-header\">\r\n          🤖 Health Insurance Assistant\r\n        </div>\r\n\r\n        <div className=\"chat-messages\">\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              className={`message ${msg.sender}`}\r\n              dangerouslySetInnerHTML={{ __html: msg.text.replace(/\\n/g, \"<br/>\") }}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={inputMessage}\r\n            onChange={(e) => setInputMessage(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your message...\"\r\n          />\r\n          <button className=\"send-button\" onClick={handleSendClick}>\r\n            Send\r\n          </button>\r\n          <button\r\n            className={`mic-button ${listening ? \"listening\" : \"\"}`}\r\n            onClick={handleMicClick}\r\n          >\r\n            🎤\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InsuranceBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}